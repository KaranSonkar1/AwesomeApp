<% layout("/layouts/boilerplate") %>

<script>
  const mapToken = "<%= process.env.MAP_TOKEN %>";
</script>

<style>
  /* ================= GLOBAL STYLES ================= */
  body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background-color: #f9f9f9;
  }

  /* ================= CARD STYLES ================= */
  .listing-card {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    border-radius: 1rem;
    overflow: hidden;
    background: white;
    height: 100%;
    display: flex;
    flex-direction: column;
    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.08);
    position: relative;
  }

  .listing-card:hover {
    transform: translateY(-6px);
    box-shadow: 0 12px 24px rgba(0, 0, 0, 0.12);
  }

  .card-img-top {
    object-fit: cover;
    height: 240px;
    width: 100%;
    border-radius: 1rem 1rem 0 0;
  }

  .card-body {
    padding: 1.25rem;
    flex-grow: 1;
  }

  .card-body h5 {
    font-size: 1.15rem;
    margin-bottom: 0.5rem;
    color: #212529;
  }

  .listing-link {
    text-decoration: none;
    color: inherit;
  }

  /* ================= WISHLIST BUTTON ================= */
  .wishlist-toggle {
    font-size: 1.5rem;
    background: rgba(255, 255, 255, 0.85);
    border-radius: 50%;
    border: none;
    padding: 0.3rem 0.6rem;
    position: absolute;
    top: 1rem;
    right: 1rem;
    cursor: pointer;
    transition: all 0.3s ease;
    z-index: 10;
  }

  .wishlist-toggle:hover {
    transform: scale(1.25);
    color: red;
    background: #fff;
    box-shadow: 0 0 6px rgba(0, 0, 0, 0.2);
  }

  .wishlist-toggle.wishlisted {
    color: red;
  }

  /* ================= FEATURED BADGE ================= */
  .featured-badge {
    position: absolute;
    top: 1rem;
    left: 1rem;
    background: gold;
    color: black;
    font-weight: bold;
    padding: 0.3rem 0.6rem;
    border-radius: 8px;
    font-size: 0.75rem;
    z-index: 10;
    box-shadow: 0 2px 6px rgba(0,0,0,0.2);
  }

  /* ================= TAX INFO ================= */
  .tax-info {
    font-size: 0.85rem;
    color: #888;
    display: none;
  }

  /* ================= FILTER BAR ================= */
  #filters {
    display: flex;
    overflow-x: auto;
    flex-wrap: nowrap;
    gap: 1rem;
    padding: 1rem 1.5rem;
    background: #ffffff;
    border-radius: 1rem;
    scroll-snap-type: x mandatory;
    -webkit-overflow-scrolling: touch;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
    align-items: center;
    margin-bottom: 1.5rem;
  }

  .filter {
    flex: 0 0 auto;
    text-align: center;
    scroll-snap-align: start;
    padding: 0.6rem 1rem;
    border-radius: 999px;
    background: #f7f7f9;
    transition: all 0.25s ease;
    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.08);
  }

  .filter:hover {
    background: linear-gradient(to right, #edf0f4, #f5f8fb);
    transform: translateY(-2px) scale(1.05);
  }

  .active-filter {
    background-color: #0d6efd !important;
    color: #fff;
  }

  /* ================= SORT DROPDOWN ================= */
  .sort-select {
    border-radius: 999px;
    padding: 0.5rem 1rem;
    border: 1px solid #ddd;
    outline: none;
  }
</style>

<!-- ================= FILTER BAR ================= -->
<div class="d-flex flex-wrap align-items-center justify-content-between mb-3">
  <div id="filters">
    <% ["Trending", "Room", "Iconic Cities", "Mountains", "Castles", "Amazing Pools", "Camping", "Farms", "Arctic", "Domes", "Boats"].forEach(category => { %>
      <a href="/listings?category=<%= category %>" class="listing-link">
        <div class="filter <%= searchParams.category === category ? 'active-filter' : '' %>">
          <%= category %>
        </div>
      </a>
    <% }); %>
  </div>

  <!-- Sorting -->
  <form method="GET" action="/listings">
    <% if (searchParams.category) { %>
      <input type="hidden" name="category" value="<%= searchParams.category %>">
    <% } %>
    <select name="sort" class="sort-select" onchange="this.form.submit()">
      <option value="">Sort By</option>
      <option value="priceAsc" <%= searchParams.sort === 'priceAsc' ? 'selected' : '' %>>Price: Low to High</option>
      <option value="priceDesc" <%= searchParams.sort === 'priceDesc' ? 'selected' : '' %>>Price: High to Low</option>
      <option value="latest" <%= searchParams.sort === 'latest' ? 'selected' : '' %>>Latest</option>
    </select>
  </form>
</div>

<!-- ================= LISTINGS GRID ================= -->
<div class="row g-4 mt-3">
  <% if (allListings.length) { %>
    <% allListings.forEach(listing => { %>
      <div class="col-lg-4 col-md-6 col-sm-12">
        <div class="listing-card">
          <% if (listing.featured) { %>
            <div class="featured-badge">‚≠ê Featured</div>
          <% } %>
          <a href="/listings/<%= listing._id %>" class="listing-link">
            <img src="<%= listing.image?.url || '/images/default.jpg' %>" class="card-img-top">
          </a>

          <!-- Wishlist -->
          <button class="wishlist-toggle <%= currentUser && currentUser.wishlist.includes(listing._id) ? 'wishlisted' : '' %>" data-id="<%= listing._id %>">
            <% if (currentUser && currentUser.wishlist.includes(listing._id)) { %>‚ù§Ô∏è<% } else if (!currentUser && guestWishlist.includes(listing._id.toString())) { %>‚ù§Ô∏è<% } else { %>ü§ç<% } %>
          </button>

          <div class="card-body">
            <h5><%= listing.title %></h5>
            <div class="text-muted small">‚Çπ<span class="base-price"><%= listing.price %></span>/night</div>
            <div class="tax-info small mt-1">
              + GST ‚Çπ<span class="gst"></span> (18%)<br />
              Total: ‚Çπ<span class="total-price"></span>
            </div>
          </div>
        </div>
      </div>
    <% }) %>
  <% } else { %>
    <div class="text-center mt-5">
      <h4>No listings available</h4>
    </div>
  <% } %>
</div>

<script>
  /* ================= TAX TOGGLE ================= */
  document.querySelectorAll(".base-price").forEach((priceEl, i) => {
    const gst = (parseFloat(priceEl.textContent) * 0.18).toFixed(0);
    document.querySelectorAll(".gst")[i].textContent = gst;
    document.querySelectorAll(".total-price")[i].textContent = parseInt(priceEl.textContent) + parseInt(gst);
  });

  /* ================= WISHLIST TOGGLE ================= */
  const toggleWishlist = async (id, btn) => {
    const res = await fetch(`/wishlist/toggle/${id}`, { method: "POST", headers: { "Content-Type": "application/json" } });
    const data = await res.json();
    btn.innerHTML = data.inWishlist ? "‚ù§Ô∏è" : "ü§ç";
    btn.classList.toggle("wishlisted", data.inWishlist);
    if (data.guest) {
      let guestWishlist = JSON.parse(localStorage.getItem("guestWishlist") || "[]");
      if (data.inWishlist) guestWishlist.push(id);
      else guestWishlist = guestWishlist.filter(x => x !== id);
      localStorage.setItem("guestWishlist", JSON.stringify(guestWishlist));
    }
  };

  document.querySelectorAll(".wishlist-toggle").forEach(btn => {
    btn.addEventListener("click", e => {
      e.preventDefault();
      toggleWishlist(btn.dataset.id, btn);
    });
  });
</script>
