<% layout("/layouts/boilerplate") %>

<script>
  const mapToken = "<%= process.env.MAP_TOKEN %>";
</script>

<style>
  body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background-color: #f9f9f9;
  }

  .listing-card {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    border-radius: 1rem;
    overflow: hidden;
    background: white;
    height: 100%;
    display: flex;
    flex-direction: column;
    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.08);
  }

  .listing-card:hover {
    transform: translateY(-6px);
    box-shadow: 0 12px 24px rgba(0, 0, 0, 0.12);
  }

  .card-img-top {
    object-fit: cover;
    height: 240px;
    width: 100%;
    border-radius: 1rem 1rem 0 0;
  }

  .card-body {
    padding: 1.25rem;
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  .card-body h5 {
    font-size: 1.15rem;
    margin-bottom: 0.5rem;
    color: #212529;
  }

  .listing-link {
    text-decoration: none;
    color: inherit;
  }

  .listing-link:hover {
    color: #000;
  }

  .wishlist-toggle {
    font-size: 1.5rem;
    background: rgba(255, 255, 255, 0.85);
    border-radius: 50%;
    border: none;
    padding: 0.3rem 0.6rem;
    position: absolute;
    top: 1rem;
    right: 1rem;
    cursor: pointer;
    transition: all 0.3s ease;
    z-index: 10;
  }

  .wishlist-toggle:hover {
    transform: scale(1.25);
    color: red;
    background: #fff;
    box-shadow: 0 0 6px rgba(0, 0, 0, 0.2);
  }

  .wishlist-toggle.wishlisted {
    color: red;
  }

  .tax-info {
    font-size: 0.85rem;
    color: #888;
    display: none;
  }

  /* Filters */
  #filters {
    display: flex;
    overflow-x: auto;
    flex-wrap: nowrap;
    gap: 1rem;
    padding: 1rem 1.5rem;
    background: #ffffff;
    border-radius: 1rem;
    scroll-snap-type: x mandatory;
    -webkit-overflow-scrolling: touch;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
    align-items: center;
    margin-bottom: 1.5rem;
    flex-direction: row;
  }

  .filter {
    flex: 0 0 auto;
    text-align: center;
    scroll-snap-align: start;
    padding: 0.6rem 1rem;
    border-radius: 999px;
    background: #f7f7f9;
    transition: all 0.25s ease;
    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.08);
    border: 1px solid transparent;
  }

  .filter:hover {
    background: linear-gradient(to right, #edf0f4, #f5f8fb);
    transform: translateY(-2px) scale(1.05);
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
  }

  .active-filter {
    background-color: #0d6efd !important;
    color: #fff;
    border: 1px solid #0a58ca;
    box-shadow: 0 4px 12px rgba(13, 110, 253, 0.3);
  }

  .filter i {
    font-size: 1.1rem;
    display: block;
    margin-bottom: 0.25rem;
  }

  .filter p {
    font-size: 0.75rem;
    margin: 0;
    font-weight: 500;
  }

  .tax-toggle {
    padding: 0.6rem 1rem;
    background: #fefefe;
    border-radius: 999px;
    border: 1px solid #e0e0e0;
    display: flex;
    align-items: center;
    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.08);
    transition: all 0.3s ease;
    font-size: 0.9rem;
    margin-left: auto;
  }

  .tax-toggle:hover {
    background: #f9f9f9;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }

  @media (max-width: 576px) {
    .card-body {
      padding: 1rem;
    }

    #filters {
      gap: 0.6rem;
      padding: 0.75rem;
      flex-wrap: nowrap;
    }

    .filter {
      padding: 0.45rem 0.75rem;
    }

    .tax-toggle {
      font-size: 0.8rem;
      padding: 0.4rem 0.8rem;
    }
  }
</style>

<!-- Filters -->
<div id="filters">
  <% ["Trending", "Room", "Iconic Cities", "Mountains", "Castles", "Amazing Pools", "Camping", "Farms", "Arctic", "Domes", "Boats"].forEach(category => { %>
    <a href="/listings?category=<%= category %>" class="listing-link">
      <div class="filter <%= searchParams.category === category ? 'active-filter' : '' %>">
        <div>
          <% if (category === 'Trending') { %><i class="fa-solid fa-fire"></i><% } %>
          <% if (category === 'Room') { %><i class="fa-solid fa-bed"></i><% } %>
          <% if (category === 'Iconic Cities') { %><i class="fa-solid fa-mountain-city"></i><% } %>
          <% if (category === 'Mountains') { %><i class="fa-solid fa-mountain"></i><% } %>
          <% if (category === 'Castles') { %><i class="fa-brands fa-fort-awesome"></i><% } %>
          <% if (category === 'Amazing Pools') { %><i class="fa-solid fa-person-swimming"></i><% } %>
          <% if (category === 'Camping') { %><i class="fa-solid fa-campground"></i><% } %>
          <% if (category === 'Farms') { %><i class="fa-solid fa-cow"></i><% } %>
          <% if (category === 'Arctic') { %><i class="fa-solid fa-snowflake"></i><% } %>
          <% if (category === 'Domes') { %><i class="fa-solid fa-igloo"></i><% } %>
          <% if (category === 'Boats') { %><i class="fa-solid fa-ship"></i><% } %>
        </div>
        <p><%= category %></p>
      </div>
    </a>
  <% }); %>

  <div class="tax-toggle">
    <div class="d-flex align-items-center gap-2">
      <label class="form-check-label m-0" for="switchCheckDefault" style="font-weight: 500;">
        Show total with tax
      </label>
      <div class="form-check form-switch m-0">
        <input class="form-check-input" type="checkbox" role="switch" id="switchCheckDefault" />
      </div>
    </div>
  </div>
</div>

<!-- Listings Grid -->
<div class="row g-4 mt-3">
  <% if (allListings && allListings.length) { %>
    <% for (let listing of allListings) { %>
      <div class="col-lg-4 col-md-6 col-sm-12">
        <div class="listing-card">
          <div class="position-relative">
            <a href="/listings/<%= listing._id %>" class="listing-link">
              <img
                src="<%= listing.image?.url || 'https://example.com/default-image.jpg' %>"
                class="card-img-top"
                alt="<%= listing.title %> image"
              />
            </a>
            <button class="wishlist-toggle <%= currentUser && currentUser.wishlist.includes(listing._id) ? 'wishlisted' : '' %>" data-id="<%= listing._id %>">
              <% if (currentUser && currentUser.wishlist.includes(listing._id)) { %>‚ù§Ô∏è<% } else if (!currentUser && guestWishlist.includes(listing._id.toString())) { %>‚ù§Ô∏è<% } else { %>ü§ç<% } %>
            </button>
          </div>
          <div class="card-body">
            <a href="/listings/<%= listing._id %>" class="listing-link">
              <h5><%= listing.title %></h5>
              <div class="text-muted small">‚Çπ<span class="base-price"><%= listing.price %></span>/night</div>
              <div class="tax-info small mt-1">
                + GST ‚Çπ<span class="gst"></span> (18%)<br />
                Total: ‚Çπ<span class="total-price"></span>
              </div>
            </a>
          </div>
        </div>
      </div>
    <% } %>
  <% } else { %>
    <div class="text-center mt-5">
      <h4>No listings available at this time.</h4>
      <a href="/listings" class="btn btn-outline-primary mt-3">Back to All Listings</a>
    </div>
  <% } %>
</div>

<script>
  const taxSwitch = document.getElementById("switchCheckDefault");
  taxSwitch.addEventListener("click", () => {
    const taxInfos = document.querySelectorAll(".tax-info");
    const basePrices = document.querySelectorAll(".base-price");
    const gstEls = document.querySelectorAll(".gst");
    const totalEls = document.querySelectorAll(".total-price");

    if (taxSwitch.checked) {
      taxInfos.forEach((el, idx) => {
        const base = parseFloat(basePrices[idx].textContent);
        const gst = (base * 0.18).toFixed(0);
        const total = Math.round(base + parseFloat(gst));
        gstEls[idx].textContent = gst;
        totalEls[idx].textContent = total;
        el.style.display = "inline";
      });
    } else {
      taxInfos.forEach((el) => {
        el.style.display = "none";
      });
    }
  });

  const toggleWishlist = async (id, btn) => {
    const res = await fetch(`/wishlist/toggle/${id}`, {
      method: "POST",
      headers: { "Content-Type": "application/json" }
    });
    const data = await res.json();
    if (data.inWishlist) {
      btn.classList.add("wishlisted");
      btn.innerHTML = "‚ù§Ô∏è";
    } else {
      btn.classList.remove("wishlisted");
      btn.innerHTML = "ü§ç";
    }

    if (data.guest) {
      let guestWishlist = JSON.parse(localStorage.getItem("guestWishlist") || "[]");
      if (data.inWishlist && !guestWishlist.includes(id)) guestWishlist.push(id);
      if (!data.inWishlist) guestWishlist = guestWishlist.filter(x => x !== id);
      localStorage.setItem("guestWishlist", JSON.stringify(guestWishlist));
    }
  };

  document.querySelectorAll(".wishlist-toggle").forEach(btn => {
    btn.addEventListener("click", (e) => {
      e.preventDefault();
      toggleWishlist(btn.dataset.id, btn);
    });
  });

  window.addEventListener("DOMContentLoaded", () => {
    const stored = JSON.parse(localStorage.getItem("guestWishlist") || "[]");
    stored.forEach(id => {
      const btn = document.querySelector(`.wishlist-toggle[data-id='${id}']`);
      if (btn) {
        btn.classList.add("wishlisted");
        btn.innerHTML = "‚ù§Ô∏è";
      }
    });
  });
</script>
