<% layout("layouts/boilerplate") %>

<div class="container mt-5">
  <h2>Checkout: <%= listing.title %></h2>

  <form id="bookingForm">
    <div class="mb-3">
      <label for="checkIn" class="form-label">Check In</label>
      <input type="date" class="form-control" id="checkIn" name="checkIn" required />
    </div>

    <div class="mb-3">
      <label for="checkOut" class="form-label">Check Out</label>
      <input type="date" class="form-control" id="checkOut" name="checkOut" required />
    </div>

    <!-- Price summary -->
    <div id="priceSummary" class="mt-3" style="display:none;">
      <p>Base Price: ₹<span id="basePrice">0</span></p>
      <p>Service Fee (5%): ₹<span id="serviceFee">0</span></p>
      <hr>
      <h5>Total: ₹<span id="grandTotal">0</span></h5>
    </div>

    <button type="submit" class="btn btn-primary mt-3">Pay & Book</button>
  </form>
</div>

<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
  const booked = <%- JSON.stringify(bookedDates) %>;

  // Disable already booked ranges
  const disableBookedRanges = () => {
    const checkIn = document.getElementById("checkIn");
    const checkOut = document.getElementById("checkOut");

    const today = new Date().toISOString().split("T")[0];
    checkIn.min = today;
    checkOut.min = today;

    const isBooked = (date) => {
      return booked.some(b => date >= b.checkIn && date < b.checkOut);
    };

    [checkIn, checkOut].forEach(input => {
      input.addEventListener("input", () => {
        const value = input.value;
        if (isBooked(value)) {
          alert("❌ This date is already booked.");
          input.value = "";
        }
      });
    });
  };

  disableBookedRanges();

  document.getElementById("bookingForm").addEventListener("submit", async function (e) {
    e.preventDefault();

    const checkIn = document.getElementById("checkIn").value;
    const checkOut = document.getElementById("checkOut").value;

    const res = await fetch(`/bookings/<%= listing._id %>/create-order`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ checkIn, checkOut }),
    });

    const data = await res.json();

    if (data.error) return alert("❌ " + data.error);

    // Show price summary
    document.getElementById("basePrice").innerText = data.totalAmount;
    document.getElementById("serviceFee").innerText = data.serviceFee;
    document.getElementById("grandTotal").innerText = data.grandTotal;
    document.getElementById("priceSummary").style.display = "block";

    // Open Razorpay payment window
    const options = {
      key: data.key,
      amount: data.order.amount,
      currency: "INR",
      name: "Waanderlust",
      description: "Booking Payment",
      order_id: data.order.id,
      handler: async function (response) {
        const confirmRes = await fetch("/bookings/verify", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({
            razorpay_payment_id: response.razorpay_payment_id,
            razorpay_order_id: response.razorpay_order_id,
            razorpay_signature: response.razorpay_signature,
            listingId: "<%= listing._id %>",
            checkIn,
            checkOut,
            grandTotal: data.grandTotal,
          }),
        });

        const confirmData = await confirmRes.json();
        if (confirmRes.ok) {
          alert("✅ Booking confirmed!");
          window.location.href = "/bookings/my";
        } else {
          alert("❌ " + confirmData.error);
        }
      },
      theme: { color: "#0d6efd" },
    };

    const rzp = new Razorpay(options);
    rzp.open();
  });
</script>
